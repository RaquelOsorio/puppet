stage{[uno,dos,tres,cuatro,cinco,seis]:}
stage[uno] -> stage[dos] -> stage[tres] -> stage[cuatro] -> stage[cinco] -> stage[seis]
class instalacion{
	exec{"yum -y install bind bind-utils":
		#ensure => present,
		creates => '/var/named',
		command => '/usr/bin/yum -y install bind bind-utils',
	}
}
class instalarDhcp{
	exec{"yum -y install dhcp":
		creates => '/etc/dhcp/dhcpd.conf',
		command => '/usr/bin/yum -y install dhcp',
	}
}
class reiniciarDHCP{
	exec{"service dhcpd restart":
		command => '/sbin/service dhcpd restart',
	}
}

class permisos{
	exec{"chown named:named /var/named/db.linux.org":
		command => '/bin/chown named:named /var/named/db.linux.org',
	} 
	exec{"chown named:named /var/named/db.127.0.0":
		command => '/bin/chown named:named /var/named/db.127.0.0',
	}
	exec{"service named start":
		command => '/sbin/service named start',
	}
	exec {"chkconfig named on":
		command => '/sbin/chkconfig named on',
	}
	exec {"firewall-cmd --permanent --zone=public --add-service=http":
		command => '/bin/firewall-cmd --permanent --zone=public --add-service=http',
	}
	exec{"firewall-cmd --permanent --zone=public --add-service=https":
		command => '/bin/firewall-cmd --permanent --zone=public --add-service=https',
	}
	exec{"firewall-cmd --reload":
		command => '/bin/firewall-cmd --reload',
	}
}

class reiniciarService{
	exec{"service network restart":
		command => '/sbin/service network restart',
	}

}
class configurarResolv{
	file{'/etc/resolv.conf':
		content => "#Generated by NetworkManager
search linux.org
domain linux.org
nameserver 127.0.0.1
"
	}
}

class{ 'instalacion' :stage => uno}
class{ 'instalarDhcp' :stage => dos}
class{ 'configurarResolv' :stage =>  tres}
class{ 'hola_mundo' :stage => cuatro}
class{ 'permisos' :stage => cinco}
class{ 'reiniciarService' :stage => seis}
if $::osfamilly == 'RedHat' {
	node "puppet.linux.org"{
		include instalacion
		include instalarDhcp
		include configurarResolv
		include hola_mundo
		include permisos
		include reiniciarService
	}
} elsif $::osfamily == 'Debian' {
	$hostname  = 'server1'
	node 'server' {
		file{'/tmp/hello':
			content => "hola mundo",
		}
#		exec{"aptitude install bind9":
#			command => '/usr/bin/aptitude install bind9',
#		}
#		exec{'hostname server':
#			command => '/bin/hostname server',
#		}
		file{'/etc/network/interfaces':
			content => template("/etc/puppet/templates/interfaces.erb"),
		}
		file{'/etc/bind/named.conf.local':
			content => template("/etc/puppet/templates/namedconflocal.erb"),
		}
		file{'/etc/bind/gcc.tp.db':
			content => template("/etc/puppet/templates/misitio.erb"),
		}
		exec{"bind9 restart":
			command => '/etc/init.d/bind9 restart',
		}
		file{'/etc/resolv.conf':
			content => template("/etc/puppet/templates/resolv.erb"),
		}
	}
}
